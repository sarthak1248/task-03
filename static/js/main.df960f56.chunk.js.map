{"version":3,"sources":["constant.js","reducer.js","store.js","components/PopUpModal.js","actions/weatherAction.js","components/WeatherPage.js","App.js","index.js"],"names":["WEATHER_DATA_SUCCESS","WEATHER_DATA_FAIL","weatherDataReducer","state","weatherStatus","action","type","payload","error","reducer","combineReducers","weatherData","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","PopUpModal","props","dispatch","useDispatch","useState","city","setCity","Modal","show","onHide","dialogClassName","aria-labelledby","centered","Body","Form","onSubmit","e","preventDefault","a","config","header","axios","get","data","response","message","weatherAPI","Group","controlId","Control","required","placeholder","value","onChange","target","Button","variant","WeatherPage","useSelector","modalShow","setModalShow","weather","main","temp","map","name","onClick","App","className","ReactDOM","render","document","getElementById"],"mappings":"2MAAaA,EAAuB,uBACvBC,EAAoB,oBCYlBC,EAXmB,WAA4C,IAA3CC,EAA0C,uDAAlC,CAAEC,cAAe,IAAMC,EAAW,uCACzE,OAAQA,EAAOC,MACjB,KAAKN,EACJ,MAAO,CAAEI,cAAeC,EAAOE,SAChC,KAAKN,EACJ,MAAO,CAAEO,MAAOH,EAAOE,SACxB,QACC,OAAOJ,ICHJM,EAAUC,0BAAgB,CAC/BC,YAAaT,IAIRU,EAAa,CAACC,KAMLC,EALDC,sBACbN,EACAO,8BAAoBC,kBAAe,WAAf,EAAmBL,K,iFCT3BM,EAAa,SAACC,GACvB,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OACE,cAACC,EAAA,EAAD,CACEC,KAAMP,EAAMO,KACZC,OAAQR,EAAMQ,OACdC,gBAAgB,YAChBC,kBAAgB,qCAChBC,UAAQ,EALV,SAOE,cAACL,EAAA,EAAMM,KAAP,UACA,eAACC,EAAA,EAAD,CAAMC,SAdY,SAACC,GACnBA,EAAEC,iBACFf,ECPkB,SAACG,GAAD,8CAAU,WAAOH,GAAP,mBAAAgB,EAAA,sEAEtBC,EAAS,CACXC,OAAQ,CACJ,eAAgB,qBAJI,SAQLC,IAAMC,IAAN,2DAA8DjB,EAA9D,wDAA0H,GAAIc,GARzH,gBAQpBI,EARoB,EAQpBA,KACRrB,EAAS,CAAEd,KAAMN,EAAsBO,QAASkC,IATpB,gDAY5BrB,EAAS,CACLd,KAAML,EACNM,QAAS,KAAMmC,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAdrE,yDAAV,sDDOTC,CAAWrB,KAYpB,UACQ,cAACS,EAAA,EAAKa,MAAN,CAAYC,UAAU,WAAtB,SACI,cAACd,EAAA,EAAKe,QAAN,CAAcC,UAAQ,EAAC1C,KAAK,OAAO2C,YAAY,aAAaC,MAAO3B,EAAM4B,SAAU,SAAAjB,GAAC,OAAIV,EAAQU,EAAEkB,OAAOF,YAE7G,cAACG,EAAA,EAAD,CAAQ/C,KAAK,SAASgD,QAAQ,UAA9B,4BEMDC,EA3BY,WAEvB,IAAM5C,EAAc6C,aAAY,SAAArD,GAAK,OAAIA,EAAMQ,eACvCP,EAAyBO,EAAzBP,cAAeI,EAAUG,EAAVH,MACvB,EAAkCc,oBAAS,GAA3C,mBAAOmC,EAAP,KAAkBC,EAAlB,KAEA,OACI,qCACClD,EAAQ,6BAAKA,IAAcJ,EAAcuD,QAC1C,gCACMvD,EAAcwD,KAAKC,KADzB,UACmC,uBAC7BzD,EAAcuD,QAAQG,KAAI,SAAA5B,GAAC,OAAIA,EAAE0B,QAFvC,IAE+C,uBACzCxD,EAAc2D,KAHpB,WAGkC,uBAAK,0BAErC,sDACF,cAACV,EAAA,EAAD,CAAQC,QAAQ,kBAAkBU,QAAS,kBAAMN,GAAa,IAA9D,yBAIA,cAAC,EAAD,CACIhC,KAAM+B,EACN9B,OAAQ,kBAAM+B,GAAa,U,YCdxBO,MARf,WACE,OACE,mCACE,qBAAKC,UAAU,OAAf,SAAsB,cAAC,EAAD,SCF5BC,IAASC,OACP,cAAC,IAAD,CAAUtD,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFuD,SAASC,eAAe,W","file":"static/js/main.df960f56.chunk.js","sourcesContent":["export const WEATHER_DATA_SUCCESS = \"WEATHER_DATA_SUCCESS\"\nexport const WEATHER_DATA_FAIL = \"WEATHER_DATA_FAIL\"","import { WEATHER_DATA_SUCCESS, WEATHER_DATA_FAIL } from './constant'\n\nexport const weatherDataReducer = (state = { weatherStatus: [] }, action) => {\n    switch (action.type) {\n\t\tcase WEATHER_DATA_SUCCESS:\n\t\t\treturn { weatherStatus: action.payload };\n\t\tcase WEATHER_DATA_FAIL:\n\t\t\treturn { error: action.payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default weatherDataReducer","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport weatherDataReducer from \"./reducer\";\n\n\nconst reducer = combineReducers({\n\tweatherData: weatherDataReducer\n});\n\n\nconst middleware = [thunk];\nconst store = createStore(\n\treducer,\n\tcomposeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { useState } from 'react'\nimport { Modal, Button, Form } from 'react-bootstrap'\nimport { useDispatch } from 'react-redux'\nimport { weatherAPI } from '../actions/weatherAction'\n\nexport const PopUpModal = (props) => {\n    const dispatch = useDispatch()\n    const [city, setCity] = useState('')\n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(weatherAPI(city))\n    }\n\n    return (\n      <Modal\n        show={props.show}\n        onHide={props.onHide}\n        dialogClassName=\"modal-90w\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n        centered\n      >\n        <Modal.Body>\n        <Form onSubmit={submitHandler}>\n                <Form.Group controlId='cityname'>\n                    <Form.Control required type=\"text\" placeholder=\"Enter City\" value={city} onChange={e => setCity(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">\n                    Submit\n                </Button>\n            </Form>\n        </Modal.Body>\n      </Modal>\n    );\n}","import { WEATHER_DATA_SUCCESS, WEATHER_DATA_FAIL } from '../constant'\nimport axios from 'axios'\n\n\nexport const weatherAPI = (city) => async (dispatch) => {\n    try {\n        const config = {\n            header: { \n                'Content-Type': 'application/json',\n            }\n        }\n\n        const { data } = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=87c948d44a0dd452a319d8043213d2e0&units=metric`, {}, config)\n        dispatch({ type: WEATHER_DATA_SUCCESS, payload: data })\n    }\n    catch (error) {\n        dispatch({ \n            type: WEATHER_DATA_FAIL, \n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React, { useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport { PopUpModal } from './PopUpModal'\n\n\nexport const WeatherPage = () => {\n\n    const weatherData = useSelector(state => state.weatherData)\n    const { weatherStatus, error } = weatherData\n    const [modalShow, setModalShow] = useState(false);\n\n    return (\n        <>\n        {error ? <h1>{error}</h1> : weatherStatus.weather ? \n        <div>\n            { weatherStatus.main.temp }  Â°C<br></br>\n            { weatherStatus.weather.map(e => e.main) } <br></br> \n            { weatherStatus.name }, India <br/><br/>\n        </div> \n        : <h1>Please Select a City</h1>} \n        <Button variant=\"outline-primary\" onClick={() => setModalShow(true)}>\n            Select City\n        </Button>\n\n        <PopUpModal\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n        />\n        </>\n    )\n}\n\nexport default WeatherPage","import React from \"react\"\nimport WeatherPage from \"./components/WeatherPage\"\nimport \"./App.css\"\nimport \"./bootstrap.min.css\"\n\nfunction App() {\n  return (\n    <>\n      <div className=\"main\"><WeatherPage /></div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}